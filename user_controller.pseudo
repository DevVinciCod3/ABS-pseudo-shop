Start with an empty list called user_database
This list will hold all user information (name, email, password)


Define function named is_valid_email that checks if an email is correctly formatted:
    
    If the email does NOT contain "@" OR does NOT contain ".":
        Show message: "Error: Invalid email format. Email must contain '@' and '.'"
        Return false  

    Else:
        Return true  


Define function named is_strong_password that checks if the password is strong:

    If the length of the password is less than 6 characters:
        Show message: "Error: Password must be at least 6 characters long."
        Return false  # Password is too short

    Else:
        Return true  # Password is acceptable


Define function named create_user where we create the (name, email, password):

    If the name is empty:
        Show message: "Error: Name cannot be empty."
        Stop and return false

    If is_valid_email(email) returns false:
        Stop and return false

    If is_strong_password(password) returns false:
        Stop and return false

    For each user in the user_database:
        If the user's email is exactly the same as the given email:
            Show message: "Error: A user with this email already exists."
            Stop and return false


    Create a new_user with:
        name = given name
        email = given email
        password = given password

    Add new_user to user_database

    Show message: "User created successfully: " followed by the user's email

    Return true

Define function named login_user to log in a user using (email, password):

    Check if the email format is valid using the is_valid_email function
    If is_valid_email(email) returns false:
        Stop and return false

    Check if the password is provided
    If the password is empty:
        Show message: "Error: Password cannot be empty."
        Stop and return false

    For each user in the user_database:
        
        If the user's email matches the given email:
            
            Step 4: Check if the password matches
            If the user's password is the same as the given password:
                Show message: "Login successful. Welcome, " followed by the user's name
                Return true  # Login was successful

            Else:
                Show message: "Error: Incorrect password."
                Stop and return false

    Show message: "Error: User not found."
    Return false
